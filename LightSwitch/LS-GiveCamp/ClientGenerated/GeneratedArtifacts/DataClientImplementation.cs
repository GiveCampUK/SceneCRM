//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Child
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Child :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Child.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._ChildId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ChildId
        {
            get
            {
                return this._ChildId;
            }
            set
            {
                if (this._ChildId != value)
                {
                    this.ValidateProperty("ChildId", value);
                    this._ChildId = value;
                    this.RaisePropertyChanged("ChildId");
                }
            }
        }
        private int _ChildId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Reference
        {
            get
            {
                return this._Reference;
            }
            set
            {
                if (this._Reference != value)
                {
                    this.RaiseDataMemberChanging("Reference");
                    this.ValidateProperty("Reference", value);
                    this._Reference = value;
                    this.RaiseDataMemberChanged("Reference");
                }
            }
        }
        private string _Reference;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if (this._Surname != value)
                {
                    this.RaiseDataMemberChanging("Surname");
                    this.ValidateProperty("Surname", value);
                    this._Surname = value;
                    this.RaiseDataMemberChanged("Surname");
                }
            }
        }
        private string _Surname;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseAttendance_Child", "ChildId", "ChildId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseAttendance> CourseAttendances
        {
            get
            {
                if (this._CourseAttendances == null)
                {
                    this._CourseAttendances = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseAttendance>(this, "CourseAttendances", this.FilterCourseAttendances, this.AttachCourseAttendances, this.DetachCourseAttendances);
                }
                return this._CourseAttendances;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseAttendance> _CourseAttendances;
        private void AttachCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            entity.Child = this;
        }
        private void DetachCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            entity.Child = null;
        }
        private bool FilterCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            return global::System.Object.Equals(entity.ChildId, this.ChildId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Child.DetailsClass.IImplementation.CourseAttendances
        {
            get
            {
                return this.CourseAttendances;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Course
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Course :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Course.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._CourseId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CourseId
        {
            get
            {
                return this._CourseId;
            }
            set
            {
                if (this._CourseId != value)
                {
                    this.ValidateProperty("CourseId", value);
                    this._CourseId = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        private int _CourseId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Year
        {
            get
            {
                return this._Year;
            }
            set
            {
                if (this._Year != value)
                {
                    this.RaiseDataMemberChanging("Year");
                    this.ValidateProperty("Year", value);
                    this._Year = value;
                    this.RaiseDataMemberChanged("Year");
                }
            }
        }
        private global::System.Nullable<int> _Year;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CourseTypeCode
        {
            get
            {
                return this._CourseTypeCode;
            }
            set
            {
                if (this._CourseTypeCode != value)
                {
                    this.RaiseDataMemberChanging("CourseTypeCode");
                    this.ValidateProperty("CourseTypeCode", value);
                    this._CourseTypeCode = value;
                    this.RaiseDataMemberChanged("CourseTypeCode");
                }
            }
        }
        private string _CourseTypeCode;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Course_CourseType", "CourseTypeCode", "CourseTypeCode", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.CourseType CourseType
        {
            get
            {
                if (this._CourseType == null)
                {
                    this._CourseType = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CourseType>(this, "CourseType", this.FilterCourseType);
                }
                return this._CourseType.Entity;
            }
            set
            {
                CourseType previous = this.CourseType;
                if (previous != value)
                {
                    this.ValidateProperty("CourseType", value);
                    if (previous != null)
                    {
                        this._CourseType.Entity = null;
                        previous.Courses.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CourseTypeCode = value.CourseTypeCode;
                    }
                    else
                    {
                        this.CourseTypeCode = default(string);
                    }
                    this._CourseType.Entity = value;
                    if (value != null)
                    {
                        value.Courses.Add(this);
                    }
                    this.RaisePropertyChanged("CourseType");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CourseType> _CourseType;
        private bool FilterCourseType(global::LightSwitchApplication.Implementation.CourseType entity)
        {
            return global::System.Object.Equals(entity.CourseTypeCode, this.CourseTypeCode);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Course.DetailsClass.IImplementation.CourseType
        {
            get
            {
                return this.CourseType;
            }
            set
            {
                this.CourseType = (global::LightSwitchApplication.Implementation.CourseType)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> TermId
        {
            get
            {
                return this._TermId;
            }
            set
            {
                if (this._TermId != value)
                {
                    this.RaiseDataMemberChanging("TermId");
                    this.ValidateProperty("TermId", value);
                    this._TermId = value;
                    this.RaiseDataMemberChanged("TermId");
                }
            }
        }
        private global::System.Nullable<int> _TermId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Course_Term", "TermId", "TermId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Term Term
        {
            get
            {
                if (this._Term == null)
                {
                    this._Term = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Term>(this, "Term", this.FilterTerm);
                }
                return this._Term.Entity;
            }
            set
            {
                Term previous = this.Term;
                if (previous != value)
                {
                    this.ValidateProperty("Term", value);
                    if (previous != null)
                    {
                        this._Term.Entity = null;
                        previous.Courses.Remove(this);
                    }
                    if (value != null)
                    {
                        this.TermId = value.TermId;
                    }
                    else
                    {
                        this.TermId = default(global::System.Nullable<int>);
                    }
                    this._Term.Entity = value;
                    if (value != null)
                    {
                        value.Courses.Add(this);
                    }
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Term> _Term;
        private bool FilterTerm(global::LightSwitchApplication.Implementation.Term entity)
        {
            return global::System.Object.Equals(entity.TermId, this.TermId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Course.DetailsClass.IImplementation.Term
        {
            get
            {
                return this.Term;
            }
            set
            {
                this.Term = (global::LightSwitchApplication.Implementation.Term)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseAttendance_Course", "CourseId", "CourseId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseAttendance> CourseAttendances
        {
            get
            {
                if (this._CourseAttendances == null)
                {
                    this._CourseAttendances = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseAttendance>(this, "CourseAttendances", this.FilterCourseAttendances, this.AttachCourseAttendances, this.DetachCourseAttendances);
                }
                return this._CourseAttendances;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseAttendance> _CourseAttendances;
        private void AttachCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            entity.Course = this;
        }
        private void DetachCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            entity.Course = null;
        }
        private bool FilterCourseAttendances(global::LightSwitchApplication.Implementation.CourseAttendance entity)
        {
            return global::System.Object.Equals(entity.CourseId, this.CourseId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.CourseAttendances
        {
            get
            {
                return this.CourseAttendances;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Course", "CourseId", "CourseId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                if (this._CourseVolunteers == null)
                {
                    this._CourseVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer>(this, "CourseVolunteers", this.FilterCourseVolunteers, this.AttachCourseVolunteers, this.DetachCourseVolunteers);
                }
                return this._CourseVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer> _CourseVolunteers;
        private void AttachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Course = this;
        }
        private void DetachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Course = null;
        }
        private bool FilterCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            return global::System.Object.Equals(entity.CourseId, this.CourseId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Course.DetailsClass.IImplementation.CourseVolunteers
        {
            get
            {
                return this.CourseVolunteers;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CourseAttendance
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CourseAttendance :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CourseAttendance.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._ChildId, this._CourseId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ChildId
        {
            get
            {
                return this._ChildId;
            }
            set
            {
                if (this._ChildId != value)
                {
                    this.ValidateProperty("ChildId", value);
                    this._ChildId = value;
                    this.RaisePropertyChanged("ChildId");
                }
            }
        }
        private int _ChildId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CourseId
        {
            get
            {
                return this._CourseId;
            }
            set
            {
                if (this._CourseId != value)
                {
                    this.ValidateProperty("CourseId", value);
                    this._CourseId = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        private int _CourseId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<bool> Completed
        {
            get
            {
                return this._Completed;
            }
            set
            {
                if (this._Completed != value)
                {
                    this.RaiseDataMemberChanging("Completed");
                    this.ValidateProperty("Completed", value);
                    this._Completed = value;
                    this.RaiseDataMemberChanged("Completed");
                }
            }
        }
        private global::System.Nullable<bool> _Completed;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseAttendance_Child", "ChildId", "ChildId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Child Child
        {
            get
            {
                if (this._Child == null)
                {
                    this._Child = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Child>(this, "Child", this.FilterChild);
                }
                return this._Child.Entity;
            }
            set
            {
                Child previous = this.Child;
                if (previous != value)
                {
                    this.ValidateProperty("Child", value);
                    if (previous != null)
                    {
                        this._Child.Entity = null;
                        previous.CourseAttendances.Remove(this);
                    }
                    if (value != null)
                    {
                        this.ChildId = value.ChildId;
                    }
                    else
                    {
                        this.ChildId = default(int);
                    }
                    this._Child.Entity = value;
                    if (value != null)
                    {
                        value.CourseAttendances.Add(this);
                    }
                    this.RaisePropertyChanged("Child");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Child> _Child;
        private bool FilterChild(global::LightSwitchApplication.Implementation.Child entity)
        {
            return global::System.Object.Equals(entity.ChildId, this.ChildId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseAttendance.DetailsClass.IImplementation.Child
        {
            get
            {
                return this.Child;
            }
            set
            {
                this.Child = (global::LightSwitchApplication.Implementation.Child)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseAttendance_Course", "CourseId", "CourseId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Course Course
        {
            get
            {
                if (this._Course == null)
                {
                    this._Course = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course>(this, "Course", this.FilterCourse);
                }
                return this._Course.Entity;
            }
            set
            {
                Course previous = this.Course;
                if (previous != value)
                {
                    this.ValidateProperty("Course", value);
                    if (previous != null)
                    {
                        this._Course.Entity = null;
                        previous.CourseAttendances.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CourseId = value.CourseId;
                    }
                    else
                    {
                        this.CourseId = default(int);
                    }
                    this._Course.Entity = value;
                    if (value != null)
                    {
                        value.CourseAttendances.Add(this);
                    }
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course> _Course;
        private bool FilterCourse(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.CourseId, this.CourseId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseAttendance.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::LightSwitchApplication.Implementation.Course)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CourseType
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CourseType :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CourseType.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._CourseTypeCode;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CourseTypeCode
        {
            get
            {
                return this._CourseTypeCode;
            }
            set
            {
                if (this._CourseTypeCode != value)
                {
                    this.ValidateProperty("CourseTypeCode", value);
                    this._CourseTypeCode = value;
                    this.RaisePropertyChanged("CourseTypeCode");
                }
            }
        }
        private string _CourseTypeCode;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CourseTypeName
        {
            get
            {
                return this._CourseTypeName;
            }
            set
            {
                if (this._CourseTypeName != value)
                {
                    this.RaiseDataMemberChanging("CourseTypeName");
                    this.ValidateProperty("CourseTypeName", value);
                    this._CourseTypeName = value;
                    this.RaiseDataMemberChanged("CourseTypeName");
                }
            }
        }
        private string _CourseTypeName;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Course_CourseType", "CourseTypeCode", "CourseTypeCode")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Course> Courses
        {
            get
            {
                if (this._Courses == null)
                {
                    this._Courses = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Course>(this, "Courses", this.FilterCourses, this.AttachCourses, this.DetachCourses);
                }
                return this._Courses;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Course> _Courses;
        private void AttachCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            entity.CourseType = this;
        }
        private void DetachCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            entity.CourseType = null;
        }
        private bool FilterCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.CourseTypeCode, this.CourseTypeCode);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.CourseType.DetailsClass.IImplementation.Courses
        {
            get
            {
                return this.Courses;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CourseVolunteer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CourseVolunteer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CourseVolunteer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._CourseId, this._VolunteerId, this._JobId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CourseId
        {
            get
            {
                return this._CourseId;
            }
            set
            {
                if (this._CourseId != value)
                {
                    this.ValidateProperty("CourseId", value);
                    this._CourseId = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        private int _CourseId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaisePropertyChanged("VolunteerId");
                }
            }
        }
        private int _VolunteerId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int JobId
        {
            get
            {
                return this._JobId;
            }
            set
            {
                if (this._JobId != value)
                {
                    this.ValidateProperty("JobId", value);
                    this._JobId = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        private int _JobId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                if (this._Notes != value)
                {
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._Notes = value;
                    this.RaiseDataMemberChanged("Notes");
                }
            }
        }
        private string _Notes;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Course", "CourseId", "CourseId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Course Course
        {
            get
            {
                if (this._Course == null)
                {
                    this._Course = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course>(this, "Course", this.FilterCourse);
                }
                return this._Course.Entity;
            }
            set
            {
                Course previous = this.Course;
                if (previous != value)
                {
                    this.ValidateProperty("Course", value);
                    if (previous != null)
                    {
                        this._Course.Entity = null;
                        previous.CourseVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CourseId = value.CourseId;
                    }
                    else
                    {
                        this.CourseId = default(int);
                    }
                    this._Course.Entity = value;
                    if (value != null)
                    {
                        value.CourseVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Course> _Course;
        private bool FilterCourse(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.CourseId, this.CourseId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseVolunteer.DetailsClass.IImplementation.Course
        {
            get
            {
                return this.Course;
            }
            set
            {
                this.Course = (global::LightSwitchApplication.Implementation.Course)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Job", "JobId", "JobId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Job Job
        {
            get
            {
                if (this._Job == null)
                {
                    this._Job = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job>(this, "Job", this.FilterJob);
                }
                return this._Job.Entity;
            }
            set
            {
                Job previous = this.Job;
                if (previous != value)
                {
                    this.ValidateProperty("Job", value);
                    if (previous != null)
                    {
                        this._Job.Entity = null;
                        previous.CourseVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.JobId = value.JobId;
                    }
                    else
                    {
                        this.JobId = default(int);
                    }
                    this._Job.Entity = value;
                    if (value != null)
                    {
                        value.CourseVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job> _Job;
        private bool FilterJob(global::LightSwitchApplication.Implementation.Job entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseVolunteer.DetailsClass.IImplementation.Job
        {
            get
            {
                return this.Job;
            }
            set
            {
                this.Job = (global::LightSwitchApplication.Implementation.Job)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Volunteer", "VolunteerId", "VolunteerId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Volunteer Volunteer
        {
            get
            {
                if (this._Volunteer == null)
                {
                    this._Volunteer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer>(this, "Volunteer", this.FilterVolunteer);
                }
                return this._Volunteer.Entity;
            }
            set
            {
                Volunteer previous = this.Volunteer;
                if (previous != value)
                {
                    this.ValidateProperty("Volunteer", value);
                    if (previous != null)
                    {
                        this._Volunteer.Entity = null;
                        previous.CourseVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.VolunteerId = value.VolunteerId;
                    }
                    else
                    {
                        this.VolunteerId = default(int);
                    }
                    this._Volunteer.Entity = value;
                    if (value != null)
                    {
                        value.CourseVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer> _Volunteer;
        private bool FilterVolunteer(global::LightSwitchApplication.Implementation.Volunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CourseVolunteer.DetailsClass.IImplementation.Volunteer
        {
            get
            {
                return this.Volunteer;
            }
            set
            {
                this.Volunteer = (global::LightSwitchApplication.Implementation.Volunteer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CrbCheck
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CrbCheck :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CrbCheck.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._CrbCheckId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int CrbCheckId
        {
            get
            {
                return this._CrbCheckId;
            }
            set
            {
                if (this._CrbCheckId != value)
                {
                    this.ValidateProperty("CrbCheckId", value);
                    this._CrbCheckId = value;
                    this.RaisePropertyChanged("CrbCheckId");
                }
            }
        }
        private int _CrbCheckId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> CheckDate
        {
            get
            {
                return this._CheckDate;
            }
            set
            {
                if (this._CheckDate != value)
                {
                    this.RaiseDataMemberChanging("CheckDate");
                    this.ValidateProperty("CheckDate", value);
                    this._CheckDate = value;
                    this.RaiseDataMemberChanged("CheckDate");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _CheckDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CrbNumber
        {
            get
            {
                return this._CrbNumber;
            }
            set
            {
                if (this._CrbNumber != value)
                {
                    this.RaiseDataMemberChanging("CrbNumber");
                    this.ValidateProperty("CrbNumber", value);
                    this._CrbNumber = value;
                    this.RaiseDataMemberChanged("CrbNumber");
                }
            }
        }
        private string _CrbNumber;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> OnlineFormSent
        {
            get
            {
                return this._OnlineFormSent;
            }
            set
            {
                if (this._OnlineFormSent != value)
                {
                    this.RaiseDataMemberChanging("OnlineFormSent");
                    this.ValidateProperty("OnlineFormSent", value);
                    this._OnlineFormSent = value;
                    this.RaiseDataMemberChanged("OnlineFormSent");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _OnlineFormSent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> FormFilledOut
        {
            get
            {
                return this._FormFilledOut;
            }
            set
            {
                if (this._FormFilledOut != value)
                {
                    this.RaiseDataMemberChanging("FormFilledOut");
                    this.ValidateProperty("FormFilledOut", value);
                    this._FormFilledOut = value;
                    this.RaiseDataMemberChanged("FormFilledOut");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _FormFilledOut;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> DateCheckExpires
        {
            get
            {
                return this._DateCheckExpires;
            }
            set
            {
                if (this._DateCheckExpires != value)
                {
                    this.RaiseDataMemberChanging("DateCheckExpires");
                    this.ValidateProperty("DateCheckExpires", value);
                    this._DateCheckExpires = value;
                    this.RaiseDataMemberChanged("DateCheckExpires");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _DateCheckExpires;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> IdComplete
        {
            get
            {
                return this._IdComplete;
            }
            set
            {
                if (this._IdComplete != value)
                {
                    this.RaiseDataMemberChanging("IdComplete");
                    this.ValidateProperty("IdComplete", value);
                    this._IdComplete = value;
                    this.RaiseDataMemberChanged("IdComplete");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _IdComplete;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.RaiseDataMemberChanging("VolunteerId");
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaiseDataMemberChanged("VolunteerId");
                }
            }
        }
        private global::System.Nullable<int> _VolunteerId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CrbCheck_Volunteer", "VolunteerId", "VolunteerId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Volunteer Volunteer
        {
            get
            {
                if (this._Volunteer == null)
                {
                    this._Volunteer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer>(this, "Volunteer", this.FilterVolunteer);
                }
                return this._Volunteer.Entity;
            }
            set
            {
                Volunteer previous = this.Volunteer;
                if (previous != value)
                {
                    this.ValidateProperty("Volunteer", value);
                    if (previous != null)
                    {
                        this._Volunteer.Entity = null;
                        previous.CrbChecks.Remove(this);
                    }
                    if (value != null)
                    {
                        this.VolunteerId = value.VolunteerId;
                    }
                    else
                    {
                        this.VolunteerId = default(global::System.Nullable<int>);
                    }
                    this._Volunteer.Entity = value;
                    if (value != null)
                    {
                        value.CrbChecks.Add(this);
                    }
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer> _Volunteer;
        private bool FilterVolunteer(global::LightSwitchApplication.Implementation.Volunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CrbCheck.DetailsClass.IImplementation.Volunteer
        {
            get
            {
                return this.Volunteer;
            }
            set
            {
                this.Volunteer = (global::LightSwitchApplication.Implementation.Volunteer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Job
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Job :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Job.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._JobId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int JobId
        {
            get
            {
                return this._JobId;
            }
            set
            {
                if (this._JobId != value)
                {
                    this.ValidateProperty("JobId", value);
                    this._JobId = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        private int _JobId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._Description = value;
                    this.RaiseDataMemberChanged("Description");
                }
            }
        }
        private string _Description;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Job", "JobId", "JobId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                if (this._CourseVolunteers == null)
                {
                    this._CourseVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer>(this, "CourseVolunteers", this.FilterCourseVolunteers, this.AttachCourseVolunteers, this.DetachCourseVolunteers);
                }
                return this._CourseVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer> _CourseVolunteers;
        private void AttachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Job = this;
        }
        private void DetachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Job = null;
        }
        private bool FilterCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Job.DetailsClass.IImplementation.CourseVolunteers
        {
            get
            {
                return this.CourseVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Job", "JobId", "JobId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                if (this._PlayVolunteers == null)
                {
                    this._PlayVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer>(this, "PlayVolunteers", this.FilterPlayVolunteers, this.AttachPlayVolunteers, this.DetachPlayVolunteers);
                }
                return this._PlayVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer> _PlayVolunteers;
        private void AttachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Job = this;
        }
        private void DetachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Job = null;
        }
        private bool FilterPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Job.DetailsClass.IImplementation.PlayVolunteers
        {
            get
            {
                return this.PlayVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Job", "JobId", "JobId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                if (this._ProductionVolunteers == null)
                {
                    this._ProductionVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer>(this, "ProductionVolunteers", this.FilterProductionVolunteers, this.AttachProductionVolunteers, this.DetachProductionVolunteers);
                }
                return this._ProductionVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer> _ProductionVolunteers;
        private void AttachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Job = this;
        }
        private void DetachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Job = null;
        }
        private bool FilterProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Job.DetailsClass.IImplementation.ProductionVolunteers
        {
            get
            {
                return this.ProductionVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_VolunteerCapability_Job", "JobId", "JobId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<VolunteerCapability> VolunteerCapabilities
        {
            get
            {
                if (this._VolunteerCapabilities == null)
                {
                    this._VolunteerCapabilities = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.VolunteerCapability>(this, "VolunteerCapabilities", this.FilterVolunteerCapabilities, this.AttachVolunteerCapabilities, this.DetachVolunteerCapabilities);
                }
                return this._VolunteerCapabilities;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.VolunteerCapability> _VolunteerCapabilities;
        private void AttachVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            entity.Job = this;
        }
        private void DetachVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            entity.Job = null;
        }
        private bool FilterVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Job.DetailsClass.IImplementation.VolunteerCapabilities
        {
            get
            {
                return this.VolunteerCapabilities;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Play
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Play :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Play.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._PlayId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int PlayId
        {
            get
            {
                return this._PlayId;
            }
            set
            {
                if (this._PlayId != value)
                {
                    this.ValidateProperty("PlayId", value);
                    this._PlayId = value;
                    this.RaisePropertyChanged("PlayId");
                }
            }
        }
        private int _PlayId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ChildId
        {
            get
            {
                return this._ChildId;
            }
            set
            {
                if (this._ChildId != value)
                {
                    this.RaiseDataMemberChanging("ChildId");
                    this.ValidateProperty("ChildId", value);
                    this._ChildId = value;
                    this.RaiseDataMemberChanged("ChildId");
                }
            }
        }
        private int _ChildId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Play", "PlayId", "PlayId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                if (this._PlayVolunteers == null)
                {
                    this._PlayVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer>(this, "PlayVolunteers", this.FilterPlayVolunteers, this.AttachPlayVolunteers, this.DetachPlayVolunteers);
                }
                return this._PlayVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer> _PlayVolunteers;
        private void AttachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Play = this;
        }
        private void DetachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Play = null;
        }
        private bool FilterPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            return global::System.Object.Equals(entity.PlayId, this.PlayId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Play.DetailsClass.IImplementation.PlayVolunteers
        {
            get
            {
                return this.PlayVolunteers;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region PlayVolunteer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class PlayVolunteer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.PlayVolunteer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._PlayId, this._VolunteerId, this._JobId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int PlayId
        {
            get
            {
                return this._PlayId;
            }
            set
            {
                if (this._PlayId != value)
                {
                    this.ValidateProperty("PlayId", value);
                    this._PlayId = value;
                    this.RaisePropertyChanged("PlayId");
                }
            }
        }
        private int _PlayId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaisePropertyChanged("VolunteerId");
                }
            }
        }
        private int _VolunteerId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int JobId
        {
            get
            {
                return this._JobId;
            }
            set
            {
                if (this._JobId != value)
                {
                    this.ValidateProperty("JobId", value);
                    this._JobId = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        private int _JobId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                if (this._Notes != value)
                {
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._Notes = value;
                    this.RaiseDataMemberChanged("Notes");
                }
            }
        }
        private string _Notes;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Job", "JobId", "JobId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Job Job
        {
            get
            {
                if (this._Job == null)
                {
                    this._Job = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job>(this, "Job", this.FilterJob);
                }
                return this._Job.Entity;
            }
            set
            {
                Job previous = this.Job;
                if (previous != value)
                {
                    this.ValidateProperty("Job", value);
                    if (previous != null)
                    {
                        this._Job.Entity = null;
                        previous.PlayVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.JobId = value.JobId;
                    }
                    else
                    {
                        this.JobId = default(int);
                    }
                    this._Job.Entity = value;
                    if (value != null)
                    {
                        value.PlayVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job> _Job;
        private bool FilterJob(global::LightSwitchApplication.Implementation.Job entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.PlayVolunteer.DetailsClass.IImplementation.Job
        {
            get
            {
                return this.Job;
            }
            set
            {
                this.Job = (global::LightSwitchApplication.Implementation.Job)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Play", "PlayId", "PlayId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Play Play
        {
            get
            {
                if (this._Play == null)
                {
                    this._Play = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Play>(this, "Play", this.FilterPlay);
                }
                return this._Play.Entity;
            }
            set
            {
                Play previous = this.Play;
                if (previous != value)
                {
                    this.ValidateProperty("Play", value);
                    if (previous != null)
                    {
                        this._Play.Entity = null;
                        previous.PlayVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.PlayId = value.PlayId;
                    }
                    else
                    {
                        this.PlayId = default(int);
                    }
                    this._Play.Entity = value;
                    if (value != null)
                    {
                        value.PlayVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Play");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Play> _Play;
        private bool FilterPlay(global::LightSwitchApplication.Implementation.Play entity)
        {
            return global::System.Object.Equals(entity.PlayId, this.PlayId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.PlayVolunteer.DetailsClass.IImplementation.Play
        {
            get
            {
                return this.Play;
            }
            set
            {
                this.Play = (global::LightSwitchApplication.Implementation.Play)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Volunteer", "VolunteerId", "VolunteerId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Volunteer Volunteer
        {
            get
            {
                if (this._Volunteer == null)
                {
                    this._Volunteer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer>(this, "Volunteer", this.FilterVolunteer);
                }
                return this._Volunteer.Entity;
            }
            set
            {
                Volunteer previous = this.Volunteer;
                if (previous != value)
                {
                    this.ValidateProperty("Volunteer", value);
                    if (previous != null)
                    {
                        this._Volunteer.Entity = null;
                        previous.PlayVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.VolunteerId = value.VolunteerId;
                    }
                    else
                    {
                        this.VolunteerId = default(int);
                    }
                    this._Volunteer.Entity = value;
                    if (value != null)
                    {
                        value.PlayVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer> _Volunteer;
        private bool FilterVolunteer(global::LightSwitchApplication.Implementation.Volunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.PlayVolunteer.DetailsClass.IImplementation.Volunteer
        {
            get
            {
                return this.Volunteer;
            }
            set
            {
                this.Volunteer = (global::LightSwitchApplication.Implementation.Volunteer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Production
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Production :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Production.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._ProductionId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ProductionId
        {
            get
            {
                return this._ProductionId;
            }
            set
            {
                if (this._ProductionId != value)
                {
                    this.ValidateProperty("ProductionId", value);
                    this._ProductionId = value;
                    this.RaisePropertyChanged("ProductionId");
                }
            }
        }
        private int _ProductionId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Production", "ProductionId", "ProductionId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                if (this._ProductionVolunteers == null)
                {
                    this._ProductionVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer>(this, "ProductionVolunteers", this.FilterProductionVolunteers, this.AttachProductionVolunteers, this.DetachProductionVolunteers);
                }
                return this._ProductionVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer> _ProductionVolunteers;
        private void AttachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Production = this;
        }
        private void DetachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Production = null;
        }
        private bool FilterProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            return global::System.Object.Equals(entity.ProductionId, this.ProductionId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Production.DetailsClass.IImplementation.ProductionVolunteers
        {
            get
            {
                return this.ProductionVolunteers;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ProductionVolunteer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class ProductionVolunteer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.ProductionVolunteer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._VolunteerId, this._JobId, this._ProductionId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaisePropertyChanged("VolunteerId");
                }
            }
        }
        private int _VolunteerId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int JobId
        {
            get
            {
                return this._JobId;
            }
            set
            {
                if (this._JobId != value)
                {
                    this.ValidateProperty("JobId", value);
                    this._JobId = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        private int _JobId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int ProductionId
        {
            get
            {
                return this._ProductionId;
            }
            set
            {
                if (this._ProductionId != value)
                {
                    this.ValidateProperty("ProductionId", value);
                    this._ProductionId = value;
                    this.RaisePropertyChanged("ProductionId");
                }
            }
        }
        private int _ProductionId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                if (this._Notes != value)
                {
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._Notes = value;
                    this.RaiseDataMemberChanged("Notes");
                }
            }
        }
        private string _Notes;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Job", "JobId", "JobId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Job Job
        {
            get
            {
                if (this._Job == null)
                {
                    this._Job = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job>(this, "Job", this.FilterJob);
                }
                return this._Job.Entity;
            }
            set
            {
                Job previous = this.Job;
                if (previous != value)
                {
                    this.ValidateProperty("Job", value);
                    if (previous != null)
                    {
                        this._Job.Entity = null;
                        previous.ProductionVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.JobId = value.JobId;
                    }
                    else
                    {
                        this.JobId = default(int);
                    }
                    this._Job.Entity = value;
                    if (value != null)
                    {
                        value.ProductionVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job> _Job;
        private bool FilterJob(global::LightSwitchApplication.Implementation.Job entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ProductionVolunteer.DetailsClass.IImplementation.Job
        {
            get
            {
                return this.Job;
            }
            set
            {
                this.Job = (global::LightSwitchApplication.Implementation.Job)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Production", "ProductionId", "ProductionId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Production Production
        {
            get
            {
                if (this._Production == null)
                {
                    this._Production = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Production>(this, "Production", this.FilterProduction);
                }
                return this._Production.Entity;
            }
            set
            {
                Production previous = this.Production;
                if (previous != value)
                {
                    this.ValidateProperty("Production", value);
                    if (previous != null)
                    {
                        this._Production.Entity = null;
                        previous.ProductionVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.ProductionId = value.ProductionId;
                    }
                    else
                    {
                        this.ProductionId = default(int);
                    }
                    this._Production.Entity = value;
                    if (value != null)
                    {
                        value.ProductionVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Production");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Production> _Production;
        private bool FilterProduction(global::LightSwitchApplication.Implementation.Production entity)
        {
            return global::System.Object.Equals(entity.ProductionId, this.ProductionId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ProductionVolunteer.DetailsClass.IImplementation.Production
        {
            get
            {
                return this.Production;
            }
            set
            {
                this.Production = (global::LightSwitchApplication.Implementation.Production)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Volunteer", "VolunteerId", "VolunteerId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Volunteer Volunteer
        {
            get
            {
                if (this._Volunteer == null)
                {
                    this._Volunteer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer>(this, "Volunteer", this.FilterVolunteer);
                }
                return this._Volunteer.Entity;
            }
            set
            {
                Volunteer previous = this.Volunteer;
                if (previous != value)
                {
                    this.ValidateProperty("Volunteer", value);
                    if (previous != null)
                    {
                        this._Volunteer.Entity = null;
                        previous.ProductionVolunteers.Remove(this);
                    }
                    if (value != null)
                    {
                        this.VolunteerId = value.VolunteerId;
                    }
                    else
                    {
                        this.VolunteerId = default(int);
                    }
                    this._Volunteer.Entity = value;
                    if (value != null)
                    {
                        value.ProductionVolunteers.Add(this);
                    }
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer> _Volunteer;
        private bool FilterVolunteer(global::LightSwitchApplication.Implementation.Volunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ProductionVolunteer.DetailsClass.IImplementation.Volunteer
        {
            get
            {
                return this.Volunteer;
            }
            set
            {
                this.Volunteer = (global::LightSwitchApplication.Implementation.Volunteer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region sysdiagram
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class sysdiagram :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.sysdiagram.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._diagram_id;
        }
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if (this._name != value)
                {
                    this.RaiseDataMemberChanging("name");
                    this.ValidateProperty("name", value);
                    this._name = value;
                    this.RaiseDataMemberChanged("name");
                }
            }
        }
        private string _name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int principal_id
        {
            get
            {
                return this._principal_id;
            }
            set
            {
                if (this._principal_id != value)
                {
                    this.RaiseDataMemberChanging("principal_id");
                    this.ValidateProperty("principal_id", value);
                    this._principal_id = value;
                    this.RaiseDataMemberChanged("principal_id");
                }
            }
        }
        private int _principal_id;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int diagram_id
        {
            get
            {
                return this._diagram_id;
            }
            set
            {
                if (this._diagram_id != value)
                {
                    this.ValidateProperty("diagram_id", value);
                    this._diagram_id = value;
                    this.RaisePropertyChanged("diagram_id");
                }
            }
        }
        private int _diagram_id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> version
        {
            get
            {
                return this._version;
            }
            set
            {
                if (this._version != value)
                {
                    this.RaiseDataMemberChanging("version");
                    this.ValidateProperty("version", value);
                    this._version = value;
                    this.RaiseDataMemberChanged("version");
                }
            }
        }
        private global::System.Nullable<int> _version;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public byte[] definition
        {
            get
            {
                return this._definition;
            }
            set
            {
                if (this._definition != value)
                {
                    this.RaiseDataMemberChanging("definition");
                    this.ValidateProperty("definition", value);
                    this._definition = value;
                    this.RaiseDataMemberChanged("definition");
                }
            }
        }
        private byte[] _definition;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Term
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Term :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Term.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._TermId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int TermId
        {
            get
            {
                return this._TermId;
            }
            set
            {
                if (this._TermId != value)
                {
                    this.ValidateProperty("TermId", value);
                    this._TermId = value;
                    this.RaisePropertyChanged("TermId");
                }
            }
        }
        private int _TermId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string TermName
        {
            get
            {
                return this._TermName;
            }
            set
            {
                if (this._TermName != value)
                {
                    this.RaiseDataMemberChanging("TermName");
                    this.ValidateProperty("TermName", value);
                    this._TermName = value;
                    this.RaiseDataMemberChanged("TermName");
                }
            }
        }
        private string _TermName;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_Course_Term", "TermId", "TermId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Course> Courses
        {
            get
            {
                if (this._Courses == null)
                {
                    this._Courses = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Course>(this, "Courses", this.FilterCourses, this.AttachCourses, this.DetachCourses);
                }
                return this._Courses;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Course> _Courses;
        private void AttachCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            entity.Term = this;
        }
        private void DetachCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            entity.Term = null;
        }
        private bool FilterCourses(global::LightSwitchApplication.Implementation.Course entity)
        {
            return global::System.Object.Equals(entity.TermId, this.TermId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Term.DetailsClass.IImplementation.Courses
        {
            get
            {
                return this.Courses;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Volunteer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Volunteer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._VolunteerId;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaisePropertyChanged("VolunteerId");
                }
            }
        }
        private int _VolunteerId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if (this._Surname != value)
                {
                    this.RaiseDataMemberChanging("Surname");
                    this.ValidateProperty("Surname", value);
                    this._Surname = value;
                    this.RaiseDataMemberChanged("Surname");
                }
            }
        }
        private string _Surname;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PerformanceAttended
        {
            get
            {
                return this._PerformanceAttended;
            }
            set
            {
                if (this._PerformanceAttended != value)
                {
                    this.RaiseDataMemberChanging("PerformanceAttended");
                    this.ValidateProperty("PerformanceAttended", value);
                    this._PerformanceAttended = value;
                    this.RaiseDataMemberChanged("PerformanceAttended");
                }
            }
        }
        private string _PerformanceAttended;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CourseVolunteer_Volunteer", "VolunteerId", "VolunteerId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CourseVolunteer> CourseVolunteers
        {
            get
            {
                if (this._CourseVolunteers == null)
                {
                    this._CourseVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer>(this, "CourseVolunteers", this.FilterCourseVolunteers, this.AttachCourseVolunteers, this.DetachCourseVolunteers);
                }
                return this._CourseVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CourseVolunteer> _CourseVolunteers;
        private void AttachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Volunteer = this;
        }
        private void DetachCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            entity.Volunteer = null;
        }
        private bool FilterCourseVolunteers(global::LightSwitchApplication.Implementation.CourseVolunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation.CourseVolunteers
        {
            get
            {
                return this.CourseVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CrbCheck_Volunteer", "VolunteerId", "VolunteerId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CrbCheck> CrbChecks
        {
            get
            {
                if (this._CrbChecks == null)
                {
                    this._CrbChecks = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CrbCheck>(this, "CrbChecks", this.FilterCrbChecks, this.AttachCrbChecks, this.DetachCrbChecks);
                }
                return this._CrbChecks;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CrbCheck> _CrbChecks;
        private void AttachCrbChecks(global::LightSwitchApplication.Implementation.CrbCheck entity)
        {
            entity.Volunteer = this;
        }
        private void DetachCrbChecks(global::LightSwitchApplication.Implementation.CrbCheck entity)
        {
            entity.Volunteer = null;
        }
        private bool FilterCrbChecks(global::LightSwitchApplication.Implementation.CrbCheck entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation.CrbChecks
        {
            get
            {
                return this.CrbChecks;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_PlayVolunteer_Volunteer", "VolunteerId", "VolunteerId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<PlayVolunteer> PlayVolunteers
        {
            get
            {
                if (this._PlayVolunteers == null)
                {
                    this._PlayVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer>(this, "PlayVolunteers", this.FilterPlayVolunteers, this.AttachPlayVolunteers, this.DetachPlayVolunteers);
                }
                return this._PlayVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PlayVolunteer> _PlayVolunteers;
        private void AttachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Volunteer = this;
        }
        private void DetachPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            entity.Volunteer = null;
        }
        private bool FilterPlayVolunteers(global::LightSwitchApplication.Implementation.PlayVolunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation.PlayVolunteers
        {
            get
            {
                return this.PlayVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ProductionVolunteer_Volunteer", "VolunteerId", "VolunteerId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<ProductionVolunteer> ProductionVolunteers
        {
            get
            {
                if (this._ProductionVolunteers == null)
                {
                    this._ProductionVolunteers = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer>(this, "ProductionVolunteers", this.FilterProductionVolunteers, this.AttachProductionVolunteers, this.DetachProductionVolunteers);
                }
                return this._ProductionVolunteers;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ProductionVolunteer> _ProductionVolunteers;
        private void AttachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Volunteer = this;
        }
        private void DetachProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            entity.Volunteer = null;
        }
        private bool FilterProductionVolunteers(global::LightSwitchApplication.Implementation.ProductionVolunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation.ProductionVolunteers
        {
            get
            {
                return this.ProductionVolunteers;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_VolunteerCapability_Volunteer", "VolunteerId", "VolunteerId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<VolunteerCapability> VolunteerCapabilities
        {
            get
            {
                if (this._VolunteerCapabilities == null)
                {
                    this._VolunteerCapabilities = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.VolunteerCapability>(this, "VolunteerCapabilities", this.FilterVolunteerCapabilities, this.AttachVolunteerCapabilities, this.DetachVolunteerCapabilities);
                }
                return this._VolunteerCapabilities;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.VolunteerCapability> _VolunteerCapabilities;
        private void AttachVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            entity.Volunteer = this;
        }
        private void DetachVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            entity.Volunteer = null;
        }
        private bool FilterVolunteerCapabilities(global::LightSwitchApplication.Implementation.VolunteerCapability entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Volunteer.DetailsClass.IImplementation.VolunteerCapabilities
        {
            get
            {
                return this.VolunteerCapabilities;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region VolunteerCapability
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/SceneCRMData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class VolunteerCapability :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.VolunteerCapability.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._VolunteerId, this._JobId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int VolunteerId
        {
            get
            {
                return this._VolunteerId;
            }
            set
            {
                if (this._VolunteerId != value)
                {
                    this.ValidateProperty("VolunteerId", value);
                    this._VolunteerId = value;
                    this.RaisePropertyChanged("VolunteerId");
                }
            }
        }
        private int _VolunteerId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int JobId
        {
            get
            {
                return this._JobId;
            }
            set
            {
                if (this._JobId != value)
                {
                    this.ValidateProperty("JobId", value);
                    this._JobId = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        private int _JobId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_VolunteerCapability_Job", "JobId", "JobId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Job Job
        {
            get
            {
                if (this._Job == null)
                {
                    this._Job = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job>(this, "Job", this.FilterJob);
                }
                return this._Job.Entity;
            }
            set
            {
                Job previous = this.Job;
                if (previous != value)
                {
                    this.ValidateProperty("Job", value);
                    if (previous != null)
                    {
                        this._Job.Entity = null;
                        previous.VolunteerCapabilities.Remove(this);
                    }
                    if (value != null)
                    {
                        this.JobId = value.JobId;
                    }
                    else
                    {
                        this.JobId = default(int);
                    }
                    this._Job.Entity = value;
                    if (value != null)
                    {
                        value.VolunteerCapabilities.Add(this);
                    }
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Job> _Job;
        private bool FilterJob(global::LightSwitchApplication.Implementation.Job entity)
        {
            return global::System.Object.Equals(entity.JobId, this.JobId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.VolunteerCapability.DetailsClass.IImplementation.Job
        {
            get
            {
                return this.Job;
            }
            set
            {
                this.Job = (global::LightSwitchApplication.Implementation.Job)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_VolunteerCapability_Volunteer", "VolunteerId", "VolunteerId", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Volunteer Volunteer
        {
            get
            {
                if (this._Volunteer == null)
                {
                    this._Volunteer = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer>(this, "Volunteer", this.FilterVolunteer);
                }
                return this._Volunteer.Entity;
            }
            set
            {
                Volunteer previous = this.Volunteer;
                if (previous != value)
                {
                    this.ValidateProperty("Volunteer", value);
                    if (previous != null)
                    {
                        this._Volunteer.Entity = null;
                        previous.VolunteerCapabilities.Remove(this);
                    }
                    if (value != null)
                    {
                        this.VolunteerId = value.VolunteerId;
                    }
                    else
                    {
                        this.VolunteerId = default(int);
                    }
                    this._Volunteer.Entity = value;
                    if (value != null)
                    {
                        value.VolunteerCapabilities.Add(this);
                    }
                    this.RaisePropertyChanged("Volunteer");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Volunteer> _Volunteer;
        private bool FilterVolunteer(global::LightSwitchApplication.Implementation.Volunteer entity)
        {
            return global::System.Object.Equals(entity.VolunteerId, this.VolunteerId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.VolunteerCapability.DetailsClass.IImplementation.Volunteer
        {
            get
            {
                return this.Volunteer;
            }
            set
            {
                this.Volunteer = (global::LightSwitchApplication.Implementation.Volunteer)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region SceneCRMData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class SceneCRMData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public SceneCRMData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<ISceneCRMDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-SceneCRMDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Child> ChildEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Child>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Course> CourseEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Course>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CourseAttendance> CourseAttendanceEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CourseAttendance>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CourseType> CourseTypeEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CourseType>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CourseVolunteer> CourseVolunteerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CourseVolunteer>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CrbCheck> CrbCheckEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CrbCheck>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Job> JobEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Job>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Play> PlayEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Play>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.PlayVolunteer> PlayVolunteerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.PlayVolunteer>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Production> ProductionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Production>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.ProductionVolunteer> ProductionVolunteerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.ProductionVolunteer>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.sysdiagram> sysdiagramEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.sysdiagram>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Term> TermEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Term>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Volunteer> VolunteerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Volunteer>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.VolunteerCapability> VolunteerCapabilityEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.VolunteerCapability>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new SceneCRMDataEntityContainer();
        }
    
        internal sealed class SceneCRMDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public SceneCRMDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Child>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Course>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CourseAttendance>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CourseType>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CourseVolunteer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CrbCheck>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Job>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Play>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.PlayVolunteer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Production>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.ProductionVolunteer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.sysdiagram>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Term>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Volunteer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.VolunteerCapability>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface ISceneCRMDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Children_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Children_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Children_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginChildren_Single(string frameworkOperators, global::System.Nullable<int> ChildId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Child> EndChildren_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Children_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Children_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Children_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginChildren_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> ChildId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Child> EndChildren_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Children_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Children_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Children_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginChildren_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Child> EndChildren_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Courses_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_Single(string frameworkOperators, global::System.Nullable<int> CourseId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Courses_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> CourseId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Courses_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Courses_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourses_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Course> EndCourses_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseAttendances_Single(string frameworkOperators, global::System.Nullable<int> ChildId, global::System.Nullable<int> CourseId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseAttendance> EndCourseAttendances_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseAttendances_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> ChildId, global::System.Nullable<int> CourseId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseAttendance> EndCourseAttendances_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseAttendances_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseAttendances_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseAttendance> EndCourseAttendances_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseTypes_Single(string frameworkOperators, string CourseTypeCode, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseType> EndCourseTypes_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseTypes_SingleOrDefault(string frameworkOperators, string CourseTypeCode, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseType> EndCourseTypes_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseTypes_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseTypes_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseType> EndCourseTypes_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseVolunteers_Single(string frameworkOperators, global::System.Nullable<int> CourseId, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseVolunteer> EndCourseVolunteers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseVolunteers_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> CourseId, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseVolunteer> EndCourseVolunteers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CourseVolunteers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCourseVolunteers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CourseVolunteer> EndCourseVolunteers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCrbChecks_Single(string frameworkOperators, global::System.Nullable<int> CrbCheckId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CrbCheck> EndCrbChecks_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCrbChecks_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> CrbCheckId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CrbCheck> EndCrbChecks_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/CrbChecks_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCrbChecks_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CrbCheck> EndCrbChecks_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Jobs_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginJobs_Single(string frameworkOperators, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Job> EndJobs_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Jobs_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginJobs_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Job> EndJobs_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Jobs_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Jobs_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginJobs_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Job> EndJobs_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Plays_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlays_Single(string frameworkOperators, global::System.Nullable<int> PlayId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Play> EndPlays_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Plays_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlays_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> PlayId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Play> EndPlays_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Plays_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Plays_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlays_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Play> EndPlays_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlayVolunteers_Single(string frameworkOperators, global::System.Nullable<int> PlayId, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PlayVolunteer> EndPlayVolunteers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlayVolunteers_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> PlayId, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PlayVolunteer> EndPlayVolunteers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/PlayVolunteers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPlayVolunteers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PlayVolunteer> EndPlayVolunteers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Productions_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductions_Single(string frameworkOperators, global::System.Nullable<int> ProductionId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Production> EndProductions_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Productions_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductions_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> ProductionId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Production> EndProductions_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Productions_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Productions_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductions_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Production> EndProductions_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductionVolunteers_Single(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.Nullable<int> ProductionId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductionVolunteer> EndProductionVolunteers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductionVolunteers_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.Nullable<int> ProductionId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductionVolunteer> EndProductionVolunteers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/ProductionVolunteers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProductionVolunteers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ProductionVolunteer> EndProductionVolunteers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginsysdiagrams_Single(string frameworkOperators, global::System.Nullable<int> diagram_id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.sysdiagram> Endsysdiagrams_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginsysdiagrams_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> diagram_id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.sysdiagram> Endsysdiagrams_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/sysdiagrams_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginsysdiagrams_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.sysdiagram> Endsysdiagrams_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Terms_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTerms_Single(string frameworkOperators, global::System.Nullable<int> TermId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Term> EndTerms_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Terms_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTerms_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> TermId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Term> EndTerms_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Terms_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Terms_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTerms_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Term> EndTerms_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteers_Single(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Volunteer> EndVolunteers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteers_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Volunteer> EndVolunteers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/Volunteers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Volunteer> EndVolunteers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_Single", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteerCapabilities_Single(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.VolunteerCapability> EndVolunteerCapabilities_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_SingleOrDefault", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteerCapabilities_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> VolunteerId, global::System.Nullable<int> JobId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.VolunteerCapability> EndVolunteerCapabilities_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_All", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/VolunteerCapabilities_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginVolunteerCapabilities_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.VolunteerCapability> EndVolunteerCapabilities_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/SceneCRMDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/SceneCRMDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/SceneCRMDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Child))
            {
                return new global::LightSwitchApplication.Implementation.Child();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Course))
            {
                return new global::LightSwitchApplication.Implementation.Course();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CourseAttendance))
            {
                return new global::LightSwitchApplication.Implementation.CourseAttendance();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CourseType))
            {
                return new global::LightSwitchApplication.Implementation.CourseType();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CourseVolunteer))
            {
                return new global::LightSwitchApplication.Implementation.CourseVolunteer();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CrbCheck))
            {
                return new global::LightSwitchApplication.Implementation.CrbCheck();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Job))
            {
                return new global::LightSwitchApplication.Implementation.Job();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Play))
            {
                return new global::LightSwitchApplication.Implementation.Play();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.PlayVolunteer))
            {
                return new global::LightSwitchApplication.Implementation.PlayVolunteer();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Production))
            {
                return new global::LightSwitchApplication.Implementation.Production();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ProductionVolunteer))
            {
                return new global::LightSwitchApplication.Implementation.ProductionVolunteer();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.sysdiagram))
            {
                return new global::LightSwitchApplication.Implementation.sysdiagram();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Term))
            {
                return new global::LightSwitchApplication.Implementation.Term();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Volunteer))
            {
                return new global::LightSwitchApplication.Implementation.Volunteer();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.VolunteerCapability))
            {
                return new global::LightSwitchApplication.Implementation.VolunteerCapability();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.SceneCRMData))
            {
                return new global::LightSwitchApplication.SceneCRMData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.SceneCRMData))
            {
                return new global::LightSwitchApplication.Implementation.SceneCRMData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Child) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Child);
            }
            if (typeof(global::LightSwitchApplication.Course) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Course);
            }
            if (typeof(global::LightSwitchApplication.CourseAttendance) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CourseAttendance);
            }
            if (typeof(global::LightSwitchApplication.CourseType) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CourseType);
            }
            if (typeof(global::LightSwitchApplication.CourseVolunteer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CourseVolunteer);
            }
            if (typeof(global::LightSwitchApplication.CrbCheck) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CrbCheck);
            }
            if (typeof(global::LightSwitchApplication.Job) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Job);
            }
            if (typeof(global::LightSwitchApplication.Play) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Play);
            }
            if (typeof(global::LightSwitchApplication.PlayVolunteer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.PlayVolunteer);
            }
            if (typeof(global::LightSwitchApplication.Production) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Production);
            }
            if (typeof(global::LightSwitchApplication.ProductionVolunteer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ProductionVolunteer);
            }
            if (typeof(global::LightSwitchApplication.sysdiagram) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.sysdiagram);
            }
            if (typeof(global::LightSwitchApplication.Term) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Term);
            }
            if (typeof(global::LightSwitchApplication.Volunteer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Volunteer);
            }
            if (typeof(global::LightSwitchApplication.VolunteerCapability) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.VolunteerCapability);
            }
            return null;
        }
    }
}
